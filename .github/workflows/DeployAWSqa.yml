name: CI/CD Pipeline

on:
  push:
    branches:
      - qa

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout del c√≥digo
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Autenticate DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Step 1: Detect changes to microservices folders
      - name: Detect changed microservices
        id: changes
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files: $CHANGED_FILES"
          CHANGED_SERVICES=()
          for dir in microservices/*; do
            if echo "$CHANGED_FILES" | grep -q "$dir"; then
              CHANGED_SERVICES+=("$dir")
            fi
          done
          echo "Modified services: ${CHANGED_SERVICES[@]}"
          echo "::set-output name=changed_services::${CHANGED_SERVICES[@]}"

      # Step 2: Iterate over the changed services and deploy them only
      - name: Build and Deploy changed services
        run: |
          for service in ${{ steps.changes.outputs.changed_services }}; do
            if [ -d "$service" ]; then
              echo "Building and deploying $service..."
              cd $service
              # Usamos DOCKER_USERNAME para etiquetar la imagen con el nombre de usuario
              docker build -t ${{ secrets.DOCKER_USERNAME }}/${service}:latest .
              docker push ${{ secrets.DOCKER_USERNAME }}/${service}:latest
              cd -
            fi
          done