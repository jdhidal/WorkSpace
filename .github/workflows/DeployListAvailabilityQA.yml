name: Build, Push, and Deploy List Availability

on:
  push:
    branches: [ "qa" ]
    paths:
      - "AVAILABILITY-MANAGEMENT/List-Availability/**"  # Cambios en esta carpeta activan el pipeline

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/list-availability:latest ./AVAILABILITY-MANAGEMENT/List-Availability/
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/list-availability:latest

  deploy-aws:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Set permissions for private key
      run: |
        echo "${{ secrets.AWS_EC2_KEY }}" > key.pem
        chmod 600 key.pem

        - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ secrets.AWS_EC2_HOSTAVAILABILITY }} << 'EOF'
          set -e  # Si algún comando falla, se detiene el script
      
          # 1) Detener y eliminar contenedor previo si existe
          sudo docker stop list-availability-container || true
          sudo docker rm list-availability-container || true
      
          # 2) Descargar la nueva imagen
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/list-availability:latest
      
          # 3) Ejecutar el contenedor y capturar salida
          sudo docker run -d --name list-availability-container \
            -e DB_HOST=${{ secrets.DB_HOSTAVA }} \
            -e DB_PORT=${{ secrets.DB_PORTAVA }} \
            -e DB_USER=${{ secrets.DB_USERAVA }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSAVA }} \
            -e DB_NAME=${{ secrets.DB_NAMESAVA }} \
            -p 3008:3008 \
            ${{ secrets.DOCKERHUB_USERNAME }}/list-availability:latest || { echo "Error en docker run"; exit 1; }
      
          # 4) Verificar si el contenedor está corriendo
          sudo docker ps -a
      
          # 5) Verificar logs en caso de error
          sudo docker logs list-availability-container || echo "No hay logs disponibles."
      
          EOF
      