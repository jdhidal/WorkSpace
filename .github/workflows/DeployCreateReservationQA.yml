name: Build, Push, and Deploy Create Reservation

on:
  push:
    branches: [ "qa" ]
    paths:
      - "RESERVATION-MANAGEMENT/Create-Reservation/**" 

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAMEKE }}
        password: ${{ secrets.DOCKERHUB_TOKENKE }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAMEKE }}/create-reservation:latest ./RESERVATION-MANAGEMENT/Create-Reservation/
        docker push ${{ secrets.DOCKERHUB_USERNAMEKE }}/create-reservation:latest

  deploy-aws:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Set permissions for private key
      run: |
        echo "${{ secrets.AWS_EC2_KEYKE }}" > key.pem
        chmod 600 key.pem

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_EC2_HOSTRESERVATION }} << 'EOF'
        # 1) Actualizar el sistema e instalar Docker si no está presente
        sudo yum update -y
        if ! command -v docker &> /dev/null
        then
          echo "Docker no encontrado, instalando..."
          sudo yum install -y docker
          sudo systemctl start docker
          sudo systemctl enable docker
        fi

        # 2) Generar el archivo .env en el servidor EC2
        echo "DB_HOST=${{ secrets.DB_HOSTRESERVATION }}" > .env
        echo "DB_USER=${{ secrets.DB_USERRESERVATION }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSRESERVATION }}" >> .env
        echo "DB_NAME=${{ secrets.DB_NAMERESERVATION }}" >> .env
        echo "DB_PORT=${{ secrets.DB_PORTRESERVATION }}" >> .env

        # 3) Detener y eliminar contenedor previo
        sudo docker stop create-reservation-container || true
        sudo docker rm create-reservation-container || true

        # 4) Descargar la nueva imagen desde Docker Hub
        sudo docker pull ${{ secrets.DOCKERHUB_USERNAMEKE }}/create-reservation:latest

        # 5) Ejecutar el contenedor con el .env
        sudo docker run -d --env-file .env -p 3010:3010 --name create-reservation-container ${{ secrets.DOCKERHUB_USERNAMEKE }}/create-reservation:latest

        # 6) Limpiar imágenes antiguas para ahorrar espacio
        sudo docker image prune -f
        EOF
